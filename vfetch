#!/bin/bash

# Colors (using tput for reliability)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
PURPLE=$(tput setaf 5)
CYAN=$(tput setaf 6)
NC=$(tput sgr0)

# Padding settings
ASCII_WIDTH=45      # Width of ASCII art
PAD_BETWEEN=5       # Padding between ASCII art and system info
LABEL_WIDTH=12      # Fixed width for labels

# Function to create uniform info display
format_info() {
    local label="$1"
    local value="$2"
    printf "%-${LABEL_WIDTH}s: %s\n" "${RED}${label}${NC}" "${CYAN}${value}${NC}"
}

# Store ASCII art
read -r -d '' ASCII_ART << "EOF"
██╗   ██╗███████╗███████╗████████╗ ██████╗██╗  ██╗
██║   ██║██╔════╝██╔════╝╚══██╔══╝██╔════╝██║  ██║
██║   ██║█████╗  █████╗     ██║   ██║     ███████║
╚██╗ ██╔╝██╔══╝  ██╔══╝     ██║   ██║     ██╔══██║
 ╚████╔╝ ██║     ███████╗   ██║   ╚██████╗██║  ██║
  ╚═══╝  ╚═╝     ╚══════╝   ╚═╝    ╚═════╝╚═╝  ╚═╝
EOF

# Convert ASCII art to array
mapfile -t ascii_art <<< "$ASCII_ART"

# Get system information
os=$(sed -n 's/PRETTY_NAME="\(.*\)"/\1/p' /etc/os-release)
host=$(hostname)
kernel=$(uname -r)
uptime=$(uptime -p | sed 's/up //')
packages="$(rpm -qa | wc -l) rpm, $(flatpak list 2>/dev/null | wc -l) flatpak"
shell=$(basename "$SHELL")
de="$XDG_CURRENT_DESKTOP"

# CPU info
IFS=':' read -r _ cpu_model < <(grep "model name" /proc/cpuinfo | head -1)
cpu_cores=$(grep -c ^processor /proc/cpuinfo)
cpu="${cpu_model# } ($cpu_cores cores)"

# Memory info
while read -r line; do
    case $line in
        *MemTotal:*) total=$((${line##* }/1024));;
        *MemAvailable:*) avail=$((${line##* }/1024));;
    esac
done < /proc/meminfo
used=$((total-avail))
memory="${used}MB / ${total}MB"

# GPU and other info
gpu=$(lspci | grep -i 'vga\|3d\|display' | sed 's/.*: //')
read -r _ used total used_percent _ <<< "$(df -h / | awk 'NR==2{print $3,$2,$5}')"
disk="$used/$total ($used_percent)"

# Battery info
if [ -d "/sys/class/power_supply/BAT0" ]; then
    bat_status=$(< /sys/class/power_supply/BAT0/status)
    bat_percent=$(< /sys/class/power_supply/BAT0/capacity)
    battery="$bat_percent% ($bat_status)"
fi

local_ip=$(hostname -I | cut -d' ' -f1)
locale="$LANG"

# Print ASCII art
echo # Top padding
for line in "${ascii_art[@]}"; do
    printf "${RED}%s${NC}\n" "$line"
done
echo # Separator

# Print system information in a straight column
format_info "OS" "$os"
format_info "Host" "$host"
format_info "Kernel" "$kernel"
format_info "Uptime" "$uptime"
format_info "Packages" "$packages"
format_info "Shell" "$shell"
format_info "DE" "$de"
format_info "CPU" "$cpu"
format_info "Memory" "$memory"
format_info "GPU" "$gpu"
format_info "Disk" "$disk"
format_info "Battery" "${battery:-N/A}"
format_info "Local IP" "$local_ip"
format_info "Locale" "$locale"
