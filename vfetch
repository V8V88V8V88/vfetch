#!/bin/bash
# Colors (using tput is more reliable for formatting)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
PURPLE=$(tput setaf 5)
CYAN=$(tput setaf 6)
NC=$(tput sgr0)

# ASCII Art with proper formatting
cat << EOF
${YELLOW}
██╗   ██╗███████╗███████╗████████╗ ██████╗██╗  ██╗
██║   ██║██╔════╝██╔════╝╚══██╔══╝██╔════╝██║  ██║
██║   ██║█████╗  █████╗     ██║   ██║     ███████║
╚██╗ ██╔╝██╔══╝  ██╔══╝     ██║   ██║     ██╔══██║
 ╚████╔╝ ██║     ███████╗   ██║   ╚██████╗██║  ██║
  ╚═══╝  ╚═╝     ╚══════╝   ╚═╝    ╚═════╝╚═╝  ╚═╝
${NC}
EOF

# Get all system information fast
echo "OS: ${GREEN}$(sed -n 's/PRETTY_NAME="\(.*\)"/\1/p' /etc/os-release)${NC}"
echo "Username: ${YELLOW}$USER${NC}"
echo "Hostname: ${CYAN}$(hostname)${NC}"
echo "System: ${GREEN}$(uname -s)${NC}"
echo "Kernel: ${PURPLE}$(uname -r)${NC}"
echo "Architecture: ${RED}$(uname -m)${NC}"
echo "Uptime: ${YELLOW}$(uptime -p | sed 's/up //')${NC}"
echo "Shell: ${CYAN}$(basename $SHELL)${NC}"
echo "DE: ${BLUE}$XDG_CURRENT_DESKTOP${NC}"

# Fast package counting
rpm_count=$(rpm -qa | wc -l)
flatpak_count=$(flatpak list 2>/dev/null | wc -l)
echo "Packages: ${PURPLE}$rpm_count (rpm), $flatpak_count (flatpak)${NC}"

# CPU info (faster but accurate method)
IFS=':' read -r _ cpu_model < <(grep "model name" /proc/cpuinfo | head -1)
cpu_cores=$(grep -c ^processor /proc/cpuinfo)
echo "CPU: ${GREEN}${cpu_model} ($cpu_cores)${NC}"

# Memory (direct from /proc/meminfo)
while read -r line; do
   case $line in
       *MemTotal:*) total=$((${line##* }/1024));;
       *MemAvailable:*) avail=$((${line##* }/1024));;
   esac
done < /proc/meminfo
used=$((total-avail))
echo "RAM: ${BLUE}${used}MB / ${total}MB${NC}"

# GPU (proper formatting)
gpu=$(lspci | grep -i 'vga\|3d\|display' | sed 's/.*: //')
echo "GPU: ${PURPLE}$gpu${NC}"

# Disk usage (with proper formatting)
read -r _ _ used total used_percent _ <<< "$(df -h / | awk 'NR==2{print $3,$2,$5}')"
echo "Disk Usage: ${RED}$used/$total ($used_percent)${NC}"

# Battery (if exists, with proper formatting)
if [ -d "/sys/class/power_supply/BAT0" ]; then
   bat_status=$(< /sys/class/power_supply/BAT0/status)
   bat_percent=$(< /sys/class/power_supply/BAT0/capacity)
   echo "Battery: ${RED}$bat_percent% ($bat_status)${NC}"
fi

# IP (with proper formatting)
ip=$(hostname -I | cut -d' ' -f1)
echo "Local IP: ${CYAN}$ip${NC}"

# Locale
echo "Locale: ${CYAN}$LANG${NC}"