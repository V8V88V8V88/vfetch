#!/bin/bash
# Colors (using tput is more reliable for formatting)
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
PURPLE=$(tput setaf 5)
CYAN=$(tput setaf 6)
NC=$(tput sgr0)

# Function to print padded info
print_info() {
    printf "%-45s %s\n" "$1" "$2"
}

# Store the ASCII art in an array
readarray -t ascii_art << "EOF"
${RED}
██╗   ██╗███████╗███████╗████████╗ ██████╗██╗  ██╗
██║   ██║██╔════╝██╔════╝╚══██╔══╝██╔════╝██║  ██║
██║   ██║█████╗  █████╗     ██║   ██║     ███████║
╚██╗ ██╔╝██╔══╝  ██╔══╝     ██║   ██║     ██╔══██║
 ╚████╔╝ ██║     ███████╗   ██║   ╚██████╗██║  ██║
  ╚═══╝  ╚═╝     ╚══════╝   ╚═╝    ╚═════╝╚═╝  ╚═╝${NC}
EOF

# Get system information
os="${GREEN}$(sed -n 's/PRETTY_NAME="\(.*\)"/\1/p' /etc/os-release)${NC}"
host="${CYAN}$(hostname)${NC}"
kernel="${PURPLE}$(uname -r)${NC}"
uptime="${YELLOW}$(uptime -p | sed 's/up //')${NC}"
packages="${PURPLE}$(rpm -qa | wc -l) (rpm), $(flatpak list 2>/dev/null | wc -l) (flatpak)${NC}"
shell="${CYAN}$(basename $SHELL)${NC}"
de="${BLUE}$XDG_CURRENT_DESKTOP${NC}"

# CPU info
IFS=':' read -r _ cpu_model < <(grep "model name" /proc/cpuinfo | head -1)
cpu_cores=$(grep -c ^processor /proc/cpuinfo)
cpu="${GREEN}${cpu_model} ($cpu_cores)${NC}"

# Memory info
while read -r line; do
    case $line in
        *MemTotal:*) total=$((${line##* }/1024));;
        *MemAvailable:*) avail=$((${line##* }/1024));;
    esac
done < /proc/meminfo
used=$((total-avail))
memory="${BLUE}${used}MB / ${total}MB${NC}"

# GPU info
gpu="${PURPLE}$(lspci | grep -i 'vga\|3d\|display' | sed 's/.*: //')${NC}"

# Disk info
read -r _ _ used total used_percent _ <<< "$(df -h / | awk 'NR==2{print $3,$2,$5}')"
disk="${RED}$used/$total ($used_percent)${NC}"

# Battery info
if [ -d "/sys/class/power_supply/BAT0" ]; then
    bat_status=$(< /sys/class/power_supply/BAT0/status)
    bat_percent=$(< /sys/class/power_supply/BAT0/capacity)
    battery="${RED}$bat_percent% ($bat_status)${NC}"
fi

# Store system info in array
readarray -t sys_info << EOF
OS: $os
Host: $host
Kernel: $kernel
Uptime: $uptime
Packages: $packages
Shell: $shell
DE: $de
CPU: $cpu
Memory: $memory
GPU: $gpu
Disk: $disk
Battery: $battery
Local IP: ${CYAN}$(hostname -I | cut -d' ' -f1)${NC}
Locale: ${CYAN}$LANG${NC}
EOF

# Print ASCII art and system info side by side
max_length=${#ascii_art[@]}
if [[ ${#sys_info[@]} -gt $max_length ]]; then
    max_length=${#sys_info[@]}
fi

echo
for ((i=0; i<max_length; i++)); do
    ascii_line="${ascii_art[$i]:-}"
    info_line="${sys_info[$i]:-}"
    printf "%-65s%s\n" "$ascii_line" "$info_line"
done
echo